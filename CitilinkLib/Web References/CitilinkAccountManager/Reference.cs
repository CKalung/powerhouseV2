// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace CitilinkLib.CitilinkAccountManager {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="BasicHttpBinding_IAccountManager", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifiedMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequestBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseBaseOSI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountTransactionMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateMessage))]
    public partial class AccountManagerClient : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private @int ContractVersionField;
        
        private @string SignatureField;
        
        private System.Threading.SendOrPostCallback CommitAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAccountTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableCreditByReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitAccountTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitAccountBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitAccountTransactionBatchEntryOperationCompleted;
        
        public AccountManagerClient() {
            this.Url = "http://118.97.213.237:3003/AccountManager.svc";
        }
        
        public AccountManagerClient(string url) {
            this.Url = url;
        }
        
        public @int ContractVersion {
            get {
                return this.ContractVersionField;
            }
            set {
                this.ContractVersionField = value;
            }
        }
        
        public @string Signature {
            get {
                return this.SignatureField;
            }
            set {
                this.SignatureField = value;
            }
        }
        
        public event CommitAccountCompletedEventHandler CommitAccountCompleted;
        
        public event FindAccountTransactionsCompletedEventHandler FindAccountTransactionsCompleted;
        
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        public event GetAccountByReferenceCompletedEventHandler GetAccountByReferenceCompleted;
        
        public event GetAvailableCreditByReferenceCompletedEventHandler GetAvailableCreditByReferenceCompleted;
        
        public event CommitAccountTransactionsCompletedEventHandler CommitAccountTransactionsCompleted;
        
        public event CommitAccountBatchCompletedEventHandler CommitAccountBatchCompleted;
        
        public event CommitAccountTransactionBatchEntryCompletedEventHandler CommitAccountTransactionBatchEntryCompleted;
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersion")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("Signature")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/CommitAccount", RequestElementName="CommitAccountRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void CommitAccount([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)] ref Account Account) {
            object[] results = this.Invoke("CommitAccount", new object[] {
                        Account});
            Account = ((Account)(results[0]));
        }
        
        public System.IAsyncResult BeginCommitAccount(Account Account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitAccount", new object[] {
                        Account}, callback, asyncState);
        }
        
        public void EndCommitAccount(System.IAsyncResult asyncResult, out Account Account) {
            object[] results = this.EndInvoke(asyncResult);
            Account = ((Account)(results[0]));
        }
        
        public void CommitAccountAsync(Account Account) {
            this.CommitAccountAsync(Account, null);
        }
        
        public void CommitAccountAsync(Account Account, object userState) {
            if ((this.CommitAccountOperationCompleted == null)) {
                this.CommitAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitAccountCompleted);
            }
            this.InvokeAsync("CommitAccount", new object[] {
                        Account}, this.CommitAccountOperationCompleted, userState);
        }
        
        private void OnCommitAccountCompleted(object arg) {
            if ((this.CommitAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitAccountCompleted(this, new CommitAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/FindAccountTransactions", RequestElementName="FindAccountTransactionRequest", ResponseElementName="FindAccountTransactionResponse", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("FindAccountTransactionResponseData", Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)]
        public FindAccountTransactionResponseData FindAccountTransactions([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)] FindAccountTransactionRequestData FindAccountTransactionRequestData) {
            object[] results = this.Invoke("FindAccountTransactions", new object[] {
                        FindAccountTransactionRequestData});
            return ((FindAccountTransactionResponseData)(results[0]));
        }
        
        public System.IAsyncResult BeginFindAccountTransactions(FindAccountTransactionRequestData FindAccountTransactionRequestData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindAccountTransactions", new object[] {
                        FindAccountTransactionRequestData}, callback, asyncState);
        }
        
        public FindAccountTransactionResponseData EndFindAccountTransactions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindAccountTransactionResponseData)(results[0]));
        }
        
        public void FindAccountTransactionsAsync(FindAccountTransactionRequestData FindAccountTransactionRequestData) {
            this.FindAccountTransactionsAsync(FindAccountTransactionRequestData, null);
        }
        
        public void FindAccountTransactionsAsync(FindAccountTransactionRequestData FindAccountTransactionRequestData, object userState) {
            if ((this.FindAccountTransactionsOperationCompleted == null)) {
                this.FindAccountTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAccountTransactionsCompleted);
            }
            this.InvokeAsync("FindAccountTransactions", new object[] {
                        FindAccountTransactionRequestData}, this.FindAccountTransactionsOperationCompleted, userState);
        }
        
        private void OnFindAccountTransactionsCompleted(object arg) {
            if ((this.FindAccountTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAccountTransactionsCompleted(this, new FindAccountTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/GetAccount", RequestElementName="GetAccountRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("Account", Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)]
        public Account GetAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetAccountRequestData GetAccountReqData) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        GetAccountReqData});
            return ((Account)(results[0]));
        }
        
        public System.IAsyncResult BeginGetAccount(GetAccountRequestData GetAccountReqData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccount", new object[] {
                        GetAccountReqData}, callback, asyncState);
        }
        
        public Account EndGetAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Account)(results[0]));
        }
        
        public void GetAccountAsync(GetAccountRequestData GetAccountReqData) {
            this.GetAccountAsync(GetAccountReqData, null);
        }
        
        public void GetAccountAsync(GetAccountRequestData GetAccountReqData, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        GetAccountReqData}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/GetAccountByReference", RequestElementName="GetAccountByReferenceRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("Account", Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)]
        public Account GetAccountByReference([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetAccountByReferenceRequestData GetAccountByReferenceReqData) {
            object[] results = this.Invoke("GetAccountByReference", new object[] {
                        GetAccountByReferenceReqData});
            return ((Account)(results[0]));
        }
        
        public System.IAsyncResult BeginGetAccountByReference(GetAccountByReferenceRequestData GetAccountByReferenceReqData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountByReference", new object[] {
                        GetAccountByReferenceReqData}, callback, asyncState);
        }
        
        public Account EndGetAccountByReference(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Account)(results[0]));
        }
        
        public void GetAccountByReferenceAsync(GetAccountByReferenceRequestData GetAccountByReferenceReqData) {
            this.GetAccountByReferenceAsync(GetAccountByReferenceReqData, null);
        }
        
        public void GetAccountByReferenceAsync(GetAccountByReferenceRequestData GetAccountByReferenceReqData, object userState) {
            if ((this.GetAccountByReferenceOperationCompleted == null)) {
                this.GetAccountByReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByReferenceCompleted);
            }
            this.InvokeAsync("GetAccountByReference", new object[] {
                        GetAccountByReferenceReqData}, this.GetAccountByReferenceOperationCompleted, userState);
        }
        
        private void OnGetAccountByReferenceCompleted(object arg) {
            if ((this.GetAccountByReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByReferenceCompleted(this, new GetAccountByReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/GetAvailableCreditByReference", RequestElementName="GetAvailableCreditByReferenceRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("AvailableCreditResponse", Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)]
        public AvailableCreditResponse GetAvailableCreditByReference([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetAvailableCreditByReferenceRequestData GetAvailableCreditByReferenceReqData) {
            object[] results = this.Invoke("GetAvailableCreditByReference", new object[] {
                        GetAvailableCreditByReferenceReqData});
            return ((AvailableCreditResponse)(results[0]));
        }
        
        public System.IAsyncResult BeginGetAvailableCreditByReference(GetAvailableCreditByReferenceRequestData GetAvailableCreditByReferenceReqData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAvailableCreditByReference", new object[] {
                        GetAvailableCreditByReferenceReqData}, callback, asyncState);
        }
        
        public AvailableCreditResponse EndGetAvailableCreditByReference(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AvailableCreditResponse)(results[0]));
        }
        
        public void GetAvailableCreditByReferenceAsync(GetAvailableCreditByReferenceRequestData GetAvailableCreditByReferenceReqData) {
            this.GetAvailableCreditByReferenceAsync(GetAvailableCreditByReferenceReqData, null);
        }
        
        public void GetAvailableCreditByReferenceAsync(GetAvailableCreditByReferenceRequestData GetAvailableCreditByReferenceReqData, object userState) {
            if ((this.GetAvailableCreditByReferenceOperationCompleted == null)) {
                this.GetAvailableCreditByReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableCreditByReferenceCompleted);
            }
            this.InvokeAsync("GetAvailableCreditByReference", new object[] {
                        GetAvailableCreditByReferenceReqData}, this.GetAvailableCreditByReferenceOperationCompleted, userState);
        }
        
        private void OnGetAvailableCreditByReferenceCompleted(object arg) {
            if ((this.GetAvailableCreditByReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableCreditByReferenceCompleted(this, new GetAvailableCreditByReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/CommitAccountTransactions", RequestElementName="CommitAccountTransactionsRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArray(ElementName="AccountTransactions", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItem(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
        public AccountTransaction[] CommitAccountTransactions([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)] PostAccountTransactionRequest PostAccountTransactionRequest) {
            object[] results = this.Invoke("CommitAccountTransactions", new object[] {
                        PostAccountTransactionRequest});
            return ((AccountTransaction[])(results[0]));
        }
        
        public System.IAsyncResult BeginCommitAccountTransactions(PostAccountTransactionRequest PostAccountTransactionRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitAccountTransactions", new object[] {
                        PostAccountTransactionRequest}, callback, asyncState);
        }
        
        public AccountTransaction[] EndCommitAccountTransactions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountTransaction[])(results[0]));
        }
        
        public void CommitAccountTransactionsAsync(PostAccountTransactionRequest PostAccountTransactionRequest) {
            this.CommitAccountTransactionsAsync(PostAccountTransactionRequest, null);
        }
        
        public void CommitAccountTransactionsAsync(PostAccountTransactionRequest PostAccountTransactionRequest, object userState) {
            if ((this.CommitAccountTransactionsOperationCompleted == null)) {
                this.CommitAccountTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitAccountTransactionsCompleted);
            }
            this.InvokeAsync("CommitAccountTransactions", new object[] {
                        PostAccountTransactionRequest}, this.CommitAccountTransactionsOperationCompleted, userState);
        }
        
        private void OnCommitAccountTransactionsCompleted(object arg) {
            if ((this.CommitAccountTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitAccountTransactionsCompleted(this, new CommitAccountTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/CommitAccountBatch", RequestElementName="CommitAccountBatchRequest", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void CommitAccountBatch([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)] ref AccountBatch AccountBatch) {
            object[] results = this.Invoke("CommitAccountBatch", new object[] {
                        AccountBatch});
            AccountBatch = ((AccountBatch)(results[0]));
        }
        
        public System.IAsyncResult BeginCommitAccountBatch(AccountBatch AccountBatch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitAccountBatch", new object[] {
                        AccountBatch}, callback, asyncState);
        }
        
        public void EndCommitAccountBatch(System.IAsyncResult asyncResult, out AccountBatch AccountBatch) {
            object[] results = this.EndInvoke(asyncResult);
            AccountBatch = ((AccountBatch)(results[0]));
        }
        
        public void CommitAccountBatchAsync(AccountBatch AccountBatch) {
            this.CommitAccountBatchAsync(AccountBatch, null);
        }
        
        public void CommitAccountBatchAsync(AccountBatch AccountBatch, object userState) {
            if ((this.CommitAccountBatchOperationCompleted == null)) {
                this.CommitAccountBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitAccountBatchCompleted);
            }
            this.InvokeAsync("CommitAccountBatch", new object[] {
                        AccountBatch}, this.CommitAccountBatchOperationCompleted, userState);
        }
        
        private void OnCommitAccountBatchCompleted(object arg) {
            if ((this.CommitAccountBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitAccountBatchCompleted(this, new CommitAccountBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapHeaderAttribute("ContractVersionField")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SignatureField")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.navitaire.com/WebServices/IAccountManager/CommitAccountTransactionBatchEntry", RequestElementName="CommitAccountTransactionsBatchRequest", ResponseElementName="CommitAccountTransactionsBatchResponse", RequestNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ResponseNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/AccountService", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArray(ElementName="AccountTransactions", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItem(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
        public AccountTransaction[] CommitAccountTransactionBatchEntry([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account", IsNullable=true)] AccountTransactionBatch accountTransactionBatchRequest) {
            object[] results = this.Invoke("CommitAccountTransactionBatchEntry", new object[] {
                        accountTransactionBatchRequest});
            return ((AccountTransaction[])(results[0]));
        }
        
        public System.IAsyncResult BeginCommitAccountTransactionBatchEntry(AccountTransactionBatch accountTransactionBatchRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitAccountTransactionBatchEntry", new object[] {
                        accountTransactionBatchRequest}, callback, asyncState);
        }
        
        public AccountTransaction[] EndCommitAccountTransactionBatchEntry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountTransaction[])(results[0]));
        }
        
        public void CommitAccountTransactionBatchEntryAsync(AccountTransactionBatch accountTransactionBatchRequest) {
            this.CommitAccountTransactionBatchEntryAsync(accountTransactionBatchRequest, null);
        }
        
        public void CommitAccountTransactionBatchEntryAsync(AccountTransactionBatch accountTransactionBatchRequest, object userState) {
            if ((this.CommitAccountTransactionBatchEntryOperationCompleted == null)) {
                this.CommitAccountTransactionBatchEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitAccountTransactionBatchEntryCompleted);
            }
            this.InvokeAsync("CommitAccountTransactionBatchEntry", new object[] {
                        accountTransactionBatchRequest}, this.CommitAccountTransactionBatchEntryOperationCompleted, userState);
        }
        
        private void OnCommitAccountTransactionBatchEntryCompleted(object arg) {
            if ((this.CommitAccountTransactionBatchEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitAccountTransactionBatchEntryCompleted(this, new CommitAccountTransactionBatchEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class Account : ModifiedMessage {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public AccountType AccountType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountTypeSpecified;
        
        /// <remarks/>
        public AccountHolderType AccountHolderType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountHolderTypeSpecified;
        
        /// <remarks/>
        public AccountStatus Status;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool StatusSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password;
        
        /// <remarks/>
        public decimal Limit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool LimitSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
        
        /// <remarks/>
        public long PersonID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool PersonIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PersonName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ForeignCurrencyCode;
        
        /// <remarks/>
        public decimal ForeignAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ForeignAmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        public AccountCredit[] AccountCredits;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum AccountType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Credit,
        
        /// <remarks/>
        Prepaid,
        
        /// <remarks/>
        Dependent,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum AccountHolderType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Agency,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        Nobody,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum AccountStatus {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        AgencyInactive,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class AccountCredit : ModifiedMessage {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public long AccountCreditID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountCreditIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountTransactionCode;
        
        /// <remarks/>
        public decimal Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AmountSpecified;
        
        /// <remarks/>
        public decimal Available;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AvailableSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
        
        /// <remarks/>
        public System.DateTime Expiration;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ExpirationSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        public AccountTransaction[] AccountTransactions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class AccountTransaction : ModifiedMessage {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public long AccountCreditID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountCreditIDSpecified;
        
        /// <remarks/>
        public long AccountTransactionID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountTransactionIDSpecified;
        
        /// <remarks/>
        public AccountTransactionType AccountTransactionType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountTransactionTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountTransactionCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Reference;
        
        /// <remarks/>
        public decimal Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
        
        /// <remarks/>
        public decimal ForeignAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ForeignAmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ForeignCurrencyCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Note;
        
        /// <remarks/>
        public long AccountBatchID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountBatchIDSpecified;
        
        /// <remarks/>
        public long PaymentID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool PaymentIDSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum AccountTransactionType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        PPAccountDebitForPayment,
        
        /// <remarks/>
        PPAccountCredit,
        
        /// <remarks/>
        CreditAccountDebitForPayment,
        
        /// <remarks/>
        CreditAccountLimitAdjustment,
        
        /// <remarks/>
        CreditAccountPayment,
        
        /// <remarks/>
        CreditAccountCredit,
        
        /// <remarks/>
        CreditAccountSpoilage,
        
        /// <remarks/>
        CreditNetCommission,
        
        /// <remarks/>
        PayableCommissionAmount,
        
        /// <remarks/>
        StatementDateAndBalance,
        
        /// <remarks/>
        ParentTransfer,
        
        /// <remarks/>
        ChildTransfer,
        
        /// <remarks/>
        ChildCredit,
        
        /// <remarks/>
        ChildDebit,
        
        /// <remarks/>
        ChildNetCommissionTransfer,
        
        /// <remarks/>
        ParentNetCommissionTransfer,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountCredit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountTransaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountBatch))]
    public partial class ModifiedMessage : StateMessage {
        
        /// <remarks/>
        public long CreatedAgentID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreatedAgentIDSpecified;
        
        /// <remarks/>
        public System.DateTime CreatedDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreatedDateSpecified;
        
        /// <remarks/>
        public long ModifiedAgentID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ModifiedAgentIDSpecified;
        
        /// <remarks/>
        public System.DateTime ModifiedDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ModifiedDateSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifiedMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountCredit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountTransaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountBatch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountTransactionBatch))]
    public partial class StateMessage {
        
        /// <remarks/>
        public MessageState State;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool StateSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum MessageState {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Clean,
        
        /// <remarks/>
        Modified,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        Confirmed,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class AccountBatch : ModifiedMessage {
        
        /// <remarks/>
        public long AccountBatchID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountBatchIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountBatchReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Note;
        
        /// <remarks/>
        public int TransactionCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool TransactionCountSpecified;
        
        /// <remarks/>
        public decimal TransactionAmountTotal;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool TransactionAmountTotalSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        public AccountTransaction[] AccountTransactions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute("accountTransactionBatchRequest", Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class AccountTransactionBatch : StateMessage {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public AccountTransactionType TransactionType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool TransactionTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
        
        /// <remarks/>
        public decimal Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ForeignCurrencyCode;
        
        /// <remarks/>
        public decimal ForeignAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ForeignAmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Note;
        
        /// <remarks/>
        public System.DateTime CreditExpiration;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreditExpirationSpecified;
        
        /// <remarks/>
        public long AccountBatchID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountBatchIDSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ContractVersion", Namespace="http://schemas.navitaire.com/WebServices", IsNullable=true)]
    public partial class @int : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("Signature", Namespace="http://schemas.navitaire.com/WebServices", IsNullable=true)]
    public partial class @string : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class FindAccountTransactionRequestData : RequestBase {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public long AccountCreditID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountCreditIDSpecified;
        
        /// <remarks/>
        public System.DateTime CreatedDateTimeBegin;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreatedDateTimeBeginSpecified;
        
        /// <remarks/>
        public System.DateTime CreatedDateTimeEnd;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreatedDateTimeEndSpecified;
        
        /// <remarks/>
        public bool SortDescending;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool SortDescendingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindAccountTransactionRequestData))]
    public partial class RequestBase {
        
        /// <remarks/>
        public bool ActiveOnly;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ActiveOnlySpecified;
        
        /// <remarks/>
        public short PageSize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool PageSizeSpecified;
        
        /// <remarks/>
        public long LastID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool LastIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CultureCode;
        
        /// <remarks/>
        public bool GetTotalCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool GetTotalCountSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class FindAccountTransactionResponseData : ResponseBaseOSI {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        public FindAccountTransactionItem[] FindAccountTransactionList;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class FindAccountTransactionItem {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        public long AccountCreditID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountCreditIDSpecified;
        
        /// <remarks/>
        public long AccountTransactionID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountTransactionIDSpecified;
        
        /// <remarks/>
        public AccountTransactionType AccountTransactionType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountTransactionTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountTransactionCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Reference;
        
        /// <remarks/>
        public decimal Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
        
        /// <remarks/>
        public decimal ForeignAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ForeignAmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ForeignCurrencyCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Note;
        
        /// <remarks/>
        public long AccountBatchID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountBatchIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountBatchReference;
        
        /// <remarks/>
        public System.DateTime CreatedDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool CreatedDateSpecified;
        
        /// <remarks/>
        public long PaymentID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool PaymentIDSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindAccountTransactionResponseData))]
    public partial class ResponseBaseOSI : ResponseBase {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        public OtherServiceInformation[] OtherServiceInformation;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    public partial class OtherServiceInformation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text;
        
        /// <remarks/>
        public OSISeverity OsiSeverity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool OsiSeveritySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OSITypeCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SubType;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum OSISeverity {
        
        /// <remarks/>
        General,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Critical,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseBaseOSI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindAccountTransactionResponseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AvailableCreditResponse))]
    public partial class ResponseBase {
        
        /// <remarks/>
        public short PageSize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool PageSizeSpecified;
        
        /// <remarks/>
        public long LastID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool LastIDSpecified;
        
        /// <remarks/>
        public int TotalCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool TotalCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CultureCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class AvailableCreditResponse : ResponseBase {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Account Account;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItem(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common")]
        public OtherServiceInformation[] OtherServiceInformations;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class GetAccountRequestData {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class GetAccountByReferenceRequestData {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class GetAvailableCreditByReferenceRequestData {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountReference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    public partial class PostAccountTransactionRequest : AccountTransactionMessage {
        
        /// <remarks/>
        public long AccountID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AccountIDSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountTransactionCode;
        
        /// <remarks/>
        public decimal Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool AmountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Account")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PostAccountTransactionRequest))]
    public partial class AccountTransactionMessage {
        
        /// <remarks/>
        public MessageTransactionState TransactionState;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool TransactionStateSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum MessageTransactionState {
        
        /// <remarks/>
        Credit,
        
        /// <remarks/>
        Debit,
        
        /// <remarks/>
        Adjust,
        
        /// <remarks/>
        Unmapped,
    }
    
    public partial class CommitAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Account Account {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    public delegate void CommitAccountCompletedEventHandler(object sender, CommitAccountCompletedEventArgs args);
    
    public partial class FindAccountTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAccountTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FindAccountTransactionResponseData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindAccountTransactionResponseData)(this.results[0]));
            }
        }
    }
    
    public delegate void FindAccountTransactionsCompletedEventHandler(object sender, FindAccountTransactionsCompletedEventArgs args);
    
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs args);
    
    public partial class GetAccountByReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    public delegate void GetAccountByReferenceCompletedEventHandler(object sender, GetAccountByReferenceCompletedEventArgs args);
    
    public partial class GetAvailableCreditByReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableCreditByReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AvailableCreditResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableCreditResponse)(this.results[0]));
            }
        }
    }
    
    public delegate void GetAvailableCreditByReferenceCompletedEventHandler(object sender, GetAvailableCreditByReferenceCompletedEventArgs args);
    
    public partial class CommitAccountTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitAccountTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountTransaction[])(this.results[0]));
            }
        }
    }
    
    public delegate void CommitAccountTransactionsCompletedEventHandler(object sender, CommitAccountTransactionsCompletedEventArgs args);
    
    public partial class CommitAccountBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitAccountBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountBatch AccountBatch {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountBatch)(this.results[0]));
            }
        }
    }
    
    public delegate void CommitAccountBatchCompletedEventHandler(object sender, CommitAccountBatchCompletedEventArgs args);
    
    public partial class CommitAccountTransactionBatchEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitAccountTransactionBatchEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountTransaction[])(this.results[0]));
            }
        }
    }
    
    public delegate void CommitAccountTransactionBatchEntryCompletedEventHandler(object sender, CommitAccountTransactionBatchEntryCompletedEventArgs args);
}
